---
# yamllint disable rule:line-length
name: "Build Main Image"

"on":
  workflow_call:

env:
  IMAGE_URL: ghcr.io/${{ github.repository }}
  PLATFORMS: "linux/amd64,linux/arm64"

jobs:
  build-push:
    name: Build-Push
    runs-on: ubuntu-latest
    permissions:
      actions: read
      packages: write

    steps:
      - name: start
        run: echo "Start with ${PLATFORMS}, ${IMAGE_URL}"

      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_URL }}
          tags: |
            # use latest on main
            type=raw,value=latest,priority=300,enable={{is_default_branch}}
            # use test in every other action
            type=raw,value=test,priority=200,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
          labels: |
            org.opencontainers.image.description=Base PHP image with dependencies for Nextcloud

      - name: Build and Load
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Test Script
        run: |
          echo "testing $FULL_IMAGE_URL"
          docker run --rm --entrypoint "/test.sh" "$FULL_IMAGE_URL"
        env:
          FULL_IMAGE_URL: ${{ steps.meta.outputs.tags }}

      - name: Test Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ steps.meta.outputs.tags }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'MEDIUM,CRITICAL,HIGH'
          hide-progress: true

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ env.PLATFORMS }}
          push: true
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
